{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            // see https://s2e-systems.github.io/Debugging-embedded-Rust-programs-using-VS-Code/
            "name": "Cortex Debug",
            "cwd": "${workspaceFolder}",
            //"preLaunchTask": "rust: cargo build",
            "preLaunchTask": "build",
            "executable": "${workspaceFolder}/target/thumbv6m-none-eabi/debug/main",
            "request": "launch",
            "type": "cortex-debug",
            //"runToEntryPoint": "main",

            "svdFile": "${workspaceFolder}/STM32F0x2.svd",
            "servertype": "openocd",
            "configFiles": ["interface/cmsis-dap.cfg", "target/stm32f0x.cfg"],
            "preLaunchCommands": [
                "monitor init",
                "monitor reset init",
                "monitor halt",
                "monitor flash write_image erase ./target/thumbv6m-none-eabi/debug/main.bin 0x08000000",
                // Things are a bit more complicated for us because we will boot to bootloader while USB is attached.
                "b *0x1fffcc28",  // breakpoint on bootloader

                "monitor arm semihosting enable",
            ],
            //"postLaunchCommands": ["continue"], // Don't stop before at the first line
            "overrideLaunchCommands": [
                // Things are a bit more complicated for us because we will boot to bootloader while USB is attached.
                //"interrupt",
                "set language rust",  // auto-detection does the same but let's play it save
                "set $flash = 0x08000000 as *[u32; 2]",
                "set $pc = $flash[0][1]",
                "set $msp = $flash[0][0]",
                "info reg",
                //"monitor rtt setup 0x20000000 100 \"SEGGER RTT\"",
                //"monitor rtt start",
                "monitor rtt server start 1234 1",
            ],
            "overrideRestartCommands": [
                // Things are a bit more complicated for us because we will boot to bootloader while USB is attached.
                //"interrupt",
                "set language rust",  // auto-detection does the same but let's play it save
                "set $flash = 0x08000000 as *[u32; 2]",
                "set $pc = $flash[0][1]",
                "set $msp = $flash[0][0]",
                "info reg",
                //"monitor rtt setup 0x20000000 100 \"SEGGER RTT\"",
                //"monitor rtt start",
                "monitor rtt server start 1234 1",
            ],

            "gdbPath": "gdb",

            // see https://github.com/Marus/cortex-debug/blob/master/debug_attributes.md
            "rttConfig": {
                "enabled": true,
                "address": "auto",
                "clearSearch": false,
                "polling_interval": 20,
                "rtt_start_retry": 1000,
                "decoders": [
                    {
                        "label": "RTT channel 0",
                        "port": 0,
                        "timestamp": true,
                        "type": "console"
                    },
                    {
                        "label": "RTT channel 1",
                        "port": 1,
                        "ports": [1],
                        "config": {},
                        "type": "advanced",
                        "decoder": "${workspaceFolder}/decode_rtt.js"
                    },
                ]
            },
            "graphConfig": [
                {
                    "label": "Graph 1",
                    "timespan": 10,
                    "type": "realtime",
                    "annotate": false,
                    "maximum": 127,
                    "minimum": -128,
                    "plots": [
                        {
                            "graphId": "T", 
                            "label": "temperature",
                            "color": "#53753c"
                        },
                        {
                            "graphId": "x", 
                            "label": "X",
                            "color": "#955f20"
                        },
                        {
                            "graphId": "y", 
                            "label": "Y",
                            "color": "#955fff"
                        },
                        {
                            "graphId": "z", 
                            "label": "Z",
                            "color": "#33ff00"
                        },
                        /*
                        {
                            "graphId": "d", 
                            "label": "dbg",
                            "color": "#3300ff"
                        },
                        */
                    ]
                },
            ]
        },
    ]
}
